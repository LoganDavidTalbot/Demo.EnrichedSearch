trigger:
- main

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  releaseBranchName: 'release'

stages:
- stage: 'Build'
  displayName: 'Build the web application'
  jobs: 
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-latest'
      demands:
      - npm

    variables:
      wwwrootDir: 'Demo.EnrichedSearch.Client/wwwroot'
      dotnetSdkVersion: '5.0.100'
    steps:
    
    - task: CopyFiles@2
      displayName: 'Copy IaC Files'
      inputs:
        SourceFolder: 'Demo.EnrichedSearch.IaC'
        Contents: '*.json'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/IaC'
        CleanTargetFolder: true
    
    - task: CopyFiles@2
      displayName: 'Copy IaC Powershell Files'
      inputs:
        SourceFolder: 'Demo.EnrichedSearch.IaC/Powershell'
        Contents: '*.ps1'
        TargetFolder: '$(Build.ArtifactStagingDirectory)/IaC/Powershell'
        CleanTargetFolder: true

    - task: UseDotNet@2
      displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
      inputs:
        version: '$(dotnetSdkVersion)'

    - task: DotNetCoreCLI@2
      displayName: 'Restore project dependencies'
      inputs:
        command: 'restore'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Build the project - $(buildConfiguration)'
      inputs:
        command: 'build'
        arguments: '--no-restore --configuration $(buildConfiguration)'
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: 'Publish the project - $(buildConfiguration)'
      inputs:
        command: 'publish'
        projects: '**/*.csproj'
        publishWebProjects: false
        arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
        zipAfterPublish: true

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

- stage: 'Dev'
  displayName: 'Deploy to the dev environment'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: dev
    variables:
    - group: Release
    - group: EnrichedSearch
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy ARM Template for Storage Account'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Logan Enterprise Subscription'
              subscriptionId: '$(demoSubscriptionId)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(demoResourceGroup)'
              location: '$(demoLocation)'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/drop/IaC/storageAccount.json'
              csmParametersFile: '$(Pipeline.Workspace)/drop/IaC/storageAccount.parameters.json'
              overrideParameters: '-storageAccountName $(storageAccountName)'
              deploymentMode: 'Incremental'

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy ARM Template for Cognitive Service'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Logan Enterprise Subscription'
              subscriptionId: '$(demoSubscriptionId)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(demoResourceGroup)'
              location: '$(demoLocation)'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/drop/IaC/cognitiveService.json'
              csmParametersFile: '$(Pipeline.Workspace)/drop/IaC/cognitiveService.parameters.json'
              overrideParameters: '-name $(cognitiveServiceName)'
              deploymentMode: 'Incremental'

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy ARM Template for Search Service'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Logan Enterprise Subscription'
              subscriptionId: '$(demoSubscriptionId)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(demoResourceGroup)'
              location: '$(demoLocation)'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/drop/IaC/searchService.json'
              csmParametersFile: '$(Pipeline.Workspace)/drop/IaC/searchService.parameters.json'
              overrideParameters: '-serviceName $(searchServiceName)'
              deploymentMode: 'Incremental'

          - task: AzureResourceManagerTemplateDeployment@3
            displayName: 'Deploy ARM Template for Web Application'
            inputs:
              deploymentScope: 'Resource Group'
              azureResourceManagerConnection: 'Logan Enterprise Subscription'
              subscriptionId: '$(demoSubscriptionId)'
              action: 'Create Or Update Resource Group'
              resourceGroupName: '$(demoResourceGroup)'
              location: '$(demoLocation)'
              templateLocation: 'Linked artifact'
              csmFile: '$(Pipeline.Workspace)/drop/IaC/webapp.json'
              csmParametersFile: '$(Pipeline.Workspace)/drop/IaC/webapp.parameters.json'
              overrideParameters: '-name $(webAppName) -hostingPlanName $(webAppPlanName) -serverFarmResourceGroup $(demoResourceGroup) -subscriptionId $(demoSubscriptionId)'
              deploymentMode: 'Incremental'       

          - task: AzureWebApp@1
            displayName: 'Deploy code to App Service: $(webAppName)'
            inputs:
              azureSubscription: 'Logan Enterprise Subscription'
              appType: 'webAppLinux'
              appName: '$(webAppName)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/Server.zip'
              
          - task: AzurePowerShell@5
            displayName: 'Add AppSettings to App Service'
            inputs:
              azureSubscription: 'Logan Enterprise Subscription'
              ScriptType: 'FilePath'
              ScriptPath: '$(Pipeline.Workspace)/drop/IaC/Powershell/Add-AppSettings.ps1'
              ScriptArguments: '-ResourceGroupName $(demoResourceGroup) -WebAppName $(webAppName) -searchservicename $(searchServiceName) -storageaccountname $(storageAccountName) -CognitiveServiceName $(cognitiveServiceName)'
              azurePowerShellVersion: 'LatestVersion'    